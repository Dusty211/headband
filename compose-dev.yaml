services:
  api:
    image: api:prod
    build:
      dockerfile: ./backend/api/Dockerfile
    entrypoint: uv run fastapi run api/main.py --root-path=/api --reload
    env_file:
      - ./envs/backend.env
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app/backend
      - roo_cline_data:/root/.vscode-server/data/globalStorage/rooveterinaryinc.roo-cline
      - huggingface_cache:/root/.cache/huggingface

  mcp:
    image: mcp:prod
    build:
      dockerfile: ./backend/mcp/Dockerfile
    environment:
      - MCP_SERVER_PORT=${MCP_SERVER_PORT}
    ports:
      - ${MCP_SERVER_PORT}:${MCP_SERVER_PORT}
    volumes:
      - ./backend/mcp:/app/mcp
      - ./backend/shared_mcp:/app/shared_mcp

  inspector:
    image: inspector:prod
    build:
      dockerfile: ./inspector/Dockerfile
    ports:
      - 6274:6274
      - 6277:6277

  nginx:
    image: nginx:1.26.3-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  postgres-db:
    image: pgvector/pgvector:pg16
    container_name: local-postgres-pgvector
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: headband_rag
    ports:
      - "5433:5432"
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres_data:/var/lib/postgresql/data
    restart: always

volumes:
  roo_cline_data:
  postgres_data:
  huggingface_cache:
